
lab7_app.elf:     file format elf32-littlenios2
lab7_app.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x10000020

Program Header:
    LOAD off    0x00001000 vaddr 0x10000000 paddr 0x10000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x10000020 paddr 0x10000020 align 2**12
         filesz 0x000008f8 memsz 0x000008f8 flags r-x
    LOAD off    0x00001918 vaddr 0x10000918 paddr 0x10000f04 align 2**12
         filesz 0x000005ec memsz 0x000005ec flags rw-
    LOAD off    0x000024f0 vaddr 0x100014f0 paddr 0x100014f0 align 2**12
         filesz 0x00000000 memsz 0x00000010 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  10000000  10000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000000  10000020  10000020  00001f04  2**0
                  CONTENTS
  2 .text         000008e8  10000020  10000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000010  10000908  10000908  00001908  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       000005ec  10000918  10000f04  00001918  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000010  100014f0  100014f0  000024f0  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00000000  00000000  00001f04  2**0
                  CONTENTS
  7 .sdram        00000000  10001500  10001500  00001f04  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00001f04  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 000002b0  00000000  00000000  00001f28  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00003a5a  00000000  00000000  000021d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000118d  00000000  00000000  00005c32  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00001227  00000000  00000000  00006dbf  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  0000040c  00000000  00000000  00007fe8  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00000e9a  00000000  00000000  000083f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00000430  00000000  00000000  0000928e  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000010  00000000  00000000  000096c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00000080  00000000  00000000  000096d0  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0000a90e  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  0000a911  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  0000a91d  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0000a91e  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  0000a91f  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  0000a923  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  0000a927  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   00000004  00000000  00000000  0000a92b  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    00000004  00000000  00000000  0000a92f  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   00000004  00000000  00000000  0000a933  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 00000008  00000000  00000000  0000a937  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 0000001f  00000000  00000000  0000a93f  2**0
                  CONTENTS, READONLY
 30 .jdi          00003db5  00000000  00000000  0000a95e  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     00055f0a  00000000  00000000  0000e713  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
10000000 l    d  .entry	00000000 .entry
10000020 l    d  .exceptions	00000000 .exceptions
10000020 l    d  .text	00000000 .text
10000908 l    d  .rodata	00000000 .rodata
10000918 l    d  .rwdata	00000000 .rwdata
100014f0 l    d  .bss	00000000 .bss
00000000 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
10001500 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../lab7_app_bsp//obj/HAL/src/crt0.o
10000058 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 alt_load.c
10000138 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_sys_init.c
00000000 l    df *ABS*	00000000 alt_close.c
100002e0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
10000414 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 impure.c
10000ac0 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 alt_exit.c
10000224 g     F .text	00000060 alt_main
10000f04 g       *ABS*	00000000 __flash_rwdata_start
100005a4 g     F .text	00000024 altera_nios2_gen2_irq_init
10000000 g     F .entry	0000000c __reset
10000020 g       *ABS*	00000000 __flash_exceptions_start
100014fc g     O .bss	00000004 errno
100014f4 g     O .bss	00000004 alt_argv
10008ee4 g       *ABS*	00000000 _gp
10000940 g     O .rwdata	00000180 alt_fd_list
10000908 g       *ABS*	00000000 __DTOR_END__
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
10000ef4 g     O .rwdata	00000004 alt_max_fd
10000efc g     O .rwdata	00000004 _global_impure_ptr
10001500 g       *ABS*	00000000 __bss_end
10000918 g     O .rwdata	00000028 alt_dev_null
100003f4 g     F .text	00000020 alt_dcache_flush_all
10000f04 g       *ABS*	00000000 __ram_rwdata_end
10000eec g     O .rwdata	00000008 alt_dev_list
10000918 g       *ABS*	00000000 __ram_rodata_end
10001500 g       *ABS*	00000000 end
10000908 g       *ABS*	00000000 __CTOR_LIST__
18000000 g       *ABS*	00000000 __alt_stack_pointer
1000072c g     F .text	00000180 __call_exitprocs
10000020 g     F .text	0000003c _start
100002bc g     F .text	00000024 alt_sys_init
10000614 g     F .text	00000118 __register_exitproc
100008ac g     F .text	00000028 .hidden __mulsi3
10000918 g       *ABS*	00000000 __ram_rwdata_start
10000908 g       *ABS*	00000000 __ram_rodata_start
10001500 g       *ABS*	00000000 __alt_stack_base
100014f0 g       *ABS*	00000000 __bss_start
1000005c g     F .text	000000dc main
100014f8 g     O .bss	00000004 alt_envp
10000ef8 g     O .rwdata	00000004 alt_errno
10000908 g       *ABS*	00000000 __CTOR_END__
10000908 g       *ABS*	00000000 __flash_rodata_start
10000908 g       *ABS*	00000000 __DTOR_LIST__
10000284 g     F .text	00000038 alt_irq_init
10000520 g     F .text	00000084 alt_release_fd
100005c8 g     F .text	00000014 atexit
10000f00 g     O .rwdata	00000004 _impure_ptr
100014f0 g     O .bss	00000004 alt_argc
100004a0 g     F .text	00000060 _do_dtors
10000ee4 g     O .rwdata	00000008 alt_fs_list
10000020 g       *ABS*	00000000 __ram_exceptions_start
10000f04 g       *ABS*	00000000 _edata
10001500 g       *ABS*	00000000 _end
10000020 g       *ABS*	00000000 __ram_exceptions_end
100005dc g     F .text	00000038 exit
18000000 g       *ABS*	00000000 __alt_data_end
10000000 g       *ABS*	00000000 __alt_mem_sdram
100008d4 g     F .text	00000034 _exit
10000500 g     F .text	00000020 alt_icache_flush_all
10000440 g     F .text	00000060 _do_ctors
1000031c g     F .text	000000d8 close
100001a0 g     F .text	00000084 alt_load



Disassembly of section .entry:

10000000 <__reset>:
10000000:	00440034 	movhi	at,4096
10000004:	08400814 	ori	at,at,32
10000008:	0800683a 	jmp	at
	...

Disassembly of section .text:

10000020 <_start>:
10000020:	06c60034 	movhi	sp,6144
10000024:	dec00014 	ori	sp,sp,0
10000028:	06840034 	movhi	gp,4096
1000002c:	d6a3b914 	ori	gp,gp,36580
10000030:	00840034 	movhi	r2,4096
10000034:	10853c14 	ori	r2,r2,5360
10000038:	00c40034 	movhi	r3,4096
1000003c:	18c54014 	ori	r3,r3,5376
10000040:	10c00326 	beq	r2,r3,10000050 <_start+0x30>
10000044:	10000015 	stw	zero,0(r2)
10000048:	10800104 	addi	r2,r2,4
1000004c:	10fffd36 	bltu	r2,r3,10000044 <__alt_data_end+0xf8000044>
10000050:	00001a00 	call	100001a0 <alt_load>
10000054:	00002240 	call	10000224 <alt_main>

10000058 <alt_after_alt_main>:
10000058:	003fff06 	br	10000058 <__alt_data_end+0xf8000058>

1000005c <main>:
// Author: Zuofu Cheng

#include <stdio.h>

int main()
{
1000005c:	defffa04 	addi	sp,sp,-24
10000060:	df000515 	stw	fp,20(sp)
10000064:	df000504 	addi	fp,sp,20
	int i = 0;
10000068:	e03ffc15 	stw	zero,-16(fp)
	unsigned int sum = 0;
1000006c:	e03ffb15 	stw	zero,-20(fp)
	volatile unsigned int *LED_PIO = (unsigned int*)0x00000070; //make a pointer to access the PIO block
10000070:	00801c04 	movi	r2,112
10000074:	e0bffd15 	stw	r2,-12(fp)
	volatile unsigned int *SW      = (unsigned int*)0x00000060;
10000078:	00801804 	movi	r2,96
1000007c:	e0bffe15 	stw	r2,-8(fp)
	volatile unsigned int *KEY     = (unsigned int*)0x00000050;
10000080:	00801404 	movi	r2,80
10000084:	e0bfff15 	stw	r2,-4(fp)
	*LED_PIO = 0; //clear all LEDs
10000088:	e0bffd17 	ldw	r2,-12(fp)
1000008c:	10000015 	stw	zero,0(r2)


	while ( 1 == 1 )
	{
		*LED_PIO &= 0;
10000090:	e0bffd17 	ldw	r2,-12(fp)
10000094:	10800017 	ldw	r2,0(r2)
10000098:	e0bffd17 	ldw	r2,-12(fp)
1000009c:	10000015 	stw	zero,0(r2)
		sum = 0;
100000a0:	e03ffb15 	stw	zero,-20(fp)
		while ( *KEY != 2)                    //not pressing key2
100000a4:	00001f06 	br	10000124 <main+0xc8>
		{
				*LED_PIO &= 0;
100000a8:	e0bffd17 	ldw	r2,-12(fp)
100000ac:	10800017 	ldw	r2,0(r2)
100000b0:	e0bffd17 	ldw	r2,-12(fp)
100000b4:	10000015 	stw	zero,0(r2)
			if ( *KEY == 1) {				  //If key3 is pressed
100000b8:	e0bfff17 	ldw	r2,-4(fp)
100000bc:	10800017 	ldw	r2,0(r2)
100000c0:	10800058 	cmpnei	r2,r2,1
100000c4:	1000111e 	bne	r2,zero,1000010c <main+0xb0>
				while (*KEY == 1);
100000c8:	0001883a 	nop
100000cc:	e0bfff17 	ldw	r2,-4(fp)
100000d0:	10800017 	ldw	r2,0(r2)
100000d4:	10800060 	cmpeqi	r2,r2,1
100000d8:	103ffc1e 	bne	r2,zero,100000cc <__alt_data_end+0xf80000cc>
				sum += *SW;
100000dc:	e0bffe17 	ldw	r2,-8(fp)
100000e0:	10800017 	ldw	r2,0(r2)
100000e4:	e0fffb17 	ldw	r3,-20(fp)
100000e8:	1885883a 	add	r2,r3,r2
100000ec:	e0bffb15 	stw	r2,-20(fp)
				if (sum > 255) sum -= 256;	  //overflow
100000f0:	e0bffb17 	ldw	r2,-20(fp)
100000f4:	10804030 	cmpltui	r2,r2,256
100000f8:	10000a1e 	bne	r2,zero,10000124 <main+0xc8>
100000fc:	e0bffb17 	ldw	r2,-20(fp)
10000100:	10bfc004 	addi	r2,r2,-256
10000104:	e0bffb15 	stw	r2,-20(fp)
10000108:	00000606 	br	10000124 <main+0xc8>

			} else{							  //else blink
//				for (i = 0; i < 100000; i++); //software delay
				*LED_PIO |= sum;              //set LSB
1000010c:	e0bffd17 	ldw	r2,-12(fp)
10000110:	10c00017 	ldw	r3,0(r2)
10000114:	e0bffb17 	ldw	r2,-20(fp)
10000118:	1886b03a 	or	r3,r3,r2
1000011c:	e0bffd17 	ldw	r2,-12(fp)
10000120:	10c00015 	stw	r3,0(r2)

	while ( 1 == 1 )
	{
		*LED_PIO &= 0;
		sum = 0;
		while ( *KEY != 2)                    //not pressing key2
10000124:	e0bfff17 	ldw	r2,-4(fp)
10000128:	10800017 	ldw	r2,0(r2)
1000012c:	10800098 	cmpnei	r2,r2,2
10000130:	103fdd1e 	bne	r2,zero,100000a8 <__alt_data_end+0xf80000a8>
				*LED_PIO |= sum;              //set LSB
//				for (i = 0; i < 100000; i++); //software delay
//				*LED_PIO &= ~(sum);           //clear LSB
			}
		}
	}
10000134:	003fd606 	br	10000090 <__alt_data_end+0xf8000090>

10000138 <alt_load_section>:
10000138:	defffc04 	addi	sp,sp,-16
1000013c:	df000315 	stw	fp,12(sp)
10000140:	df000304 	addi	fp,sp,12
10000144:	e13ffd15 	stw	r4,-12(fp)
10000148:	e17ffe15 	stw	r5,-8(fp)
1000014c:	e1bfff15 	stw	r6,-4(fp)
10000150:	e0fffe17 	ldw	r3,-8(fp)
10000154:	e0bffd17 	ldw	r2,-12(fp)
10000158:	18800c26 	beq	r3,r2,1000018c <alt_load_section+0x54>
1000015c:	00000806 	br	10000180 <alt_load_section+0x48>
10000160:	e0bffe17 	ldw	r2,-8(fp)
10000164:	10c00104 	addi	r3,r2,4
10000168:	e0fffe15 	stw	r3,-8(fp)
1000016c:	e0fffd17 	ldw	r3,-12(fp)
10000170:	19000104 	addi	r4,r3,4
10000174:	e13ffd15 	stw	r4,-12(fp)
10000178:	18c00017 	ldw	r3,0(r3)
1000017c:	10c00015 	stw	r3,0(r2)
10000180:	e0fffe17 	ldw	r3,-8(fp)
10000184:	e0bfff17 	ldw	r2,-4(fp)
10000188:	18bff51e 	bne	r3,r2,10000160 <__alt_data_end+0xf8000160>
1000018c:	0001883a 	nop
10000190:	e037883a 	mov	sp,fp
10000194:	df000017 	ldw	fp,0(sp)
10000198:	dec00104 	addi	sp,sp,4
1000019c:	f800283a 	ret

100001a0 <alt_load>:
100001a0:	defffe04 	addi	sp,sp,-8
100001a4:	dfc00115 	stw	ra,4(sp)
100001a8:	df000015 	stw	fp,0(sp)
100001ac:	d839883a 	mov	fp,sp
100001b0:	01840034 	movhi	r6,4096
100001b4:	3183c104 	addi	r6,r6,3844
100001b8:	01440034 	movhi	r5,4096
100001bc:	29424604 	addi	r5,r5,2328
100001c0:	01040034 	movhi	r4,4096
100001c4:	2103c104 	addi	r4,r4,3844
100001c8:	00001380 	call	10000138 <alt_load_section>
100001cc:	01840034 	movhi	r6,4096
100001d0:	31800804 	addi	r6,r6,32
100001d4:	01440034 	movhi	r5,4096
100001d8:	29400804 	addi	r5,r5,32
100001dc:	01040034 	movhi	r4,4096
100001e0:	21000804 	addi	r4,r4,32
100001e4:	00001380 	call	10000138 <alt_load_section>
100001e8:	01840034 	movhi	r6,4096
100001ec:	31824604 	addi	r6,r6,2328
100001f0:	01440034 	movhi	r5,4096
100001f4:	29424204 	addi	r5,r5,2312
100001f8:	01040034 	movhi	r4,4096
100001fc:	21024204 	addi	r4,r4,2312
10000200:	00001380 	call	10000138 <alt_load_section>
10000204:	00003f40 	call	100003f4 <alt_dcache_flush_all>
10000208:	00005000 	call	10000500 <alt_icache_flush_all>
1000020c:	0001883a 	nop
10000210:	e037883a 	mov	sp,fp
10000214:	dfc00117 	ldw	ra,4(sp)
10000218:	df000017 	ldw	fp,0(sp)
1000021c:	dec00204 	addi	sp,sp,8
10000220:	f800283a 	ret

10000224 <alt_main>:
10000224:	defffd04 	addi	sp,sp,-12
10000228:	dfc00215 	stw	ra,8(sp)
1000022c:	df000115 	stw	fp,4(sp)
10000230:	df000104 	addi	fp,sp,4
10000234:	0009883a 	mov	r4,zero
10000238:	00002840 	call	10000284 <alt_irq_init>
1000023c:	0001883a 	nop
10000240:	00002bc0 	call	100002bc <alt_sys_init>
10000244:	00004400 	call	10000440 <_do_ctors>
10000248:	01040034 	movhi	r4,4096
1000024c:	21012804 	addi	r4,r4,1184
10000250:	00005c80 	call	100005c8 <atexit>
10000254:	d0a18317 	ldw	r2,-31220(gp)
10000258:	d0e18417 	ldw	r3,-31216(gp)
1000025c:	d1218517 	ldw	r4,-31212(gp)
10000260:	200d883a 	mov	r6,r4
10000264:	180b883a 	mov	r5,r3
10000268:	1009883a 	mov	r4,r2
1000026c:	000005c0 	call	1000005c <main>
10000270:	e0bfff15 	stw	r2,-4(fp)
10000274:	01000044 	movi	r4,1
10000278:	000031c0 	call	1000031c <close>
1000027c:	e13fff17 	ldw	r4,-4(fp)
10000280:	00005dc0 	call	100005dc <exit>

10000284 <alt_irq_init>:
10000284:	defffd04 	addi	sp,sp,-12
10000288:	dfc00215 	stw	ra,8(sp)
1000028c:	df000115 	stw	fp,4(sp)
10000290:	df000104 	addi	fp,sp,4
10000294:	e13fff15 	stw	r4,-4(fp)
10000298:	00005a40 	call	100005a4 <altera_nios2_gen2_irq_init>
1000029c:	00800044 	movi	r2,1
100002a0:	1001703a 	wrctl	status,r2
100002a4:	0001883a 	nop
100002a8:	e037883a 	mov	sp,fp
100002ac:	dfc00117 	ldw	ra,4(sp)
100002b0:	df000017 	ldw	fp,0(sp)
100002b4:	dec00204 	addi	sp,sp,8
100002b8:	f800283a 	ret

100002bc <alt_sys_init>:
100002bc:	deffff04 	addi	sp,sp,-4
100002c0:	df000015 	stw	fp,0(sp)
100002c4:	d839883a 	mov	fp,sp
100002c8:	0001883a 	nop
100002cc:	0001883a 	nop
100002d0:	e037883a 	mov	sp,fp
100002d4:	df000017 	ldw	fp,0(sp)
100002d8:	dec00104 	addi	sp,sp,4
100002dc:	f800283a 	ret

100002e0 <alt_get_errno>:
100002e0:	defffe04 	addi	sp,sp,-8
100002e4:	dfc00115 	stw	ra,4(sp)
100002e8:	df000015 	stw	fp,0(sp)
100002ec:	d839883a 	mov	fp,sp
100002f0:	d0a00517 	ldw	r2,-32748(gp)
100002f4:	10000326 	beq	r2,zero,10000304 <alt_get_errno+0x24>
100002f8:	d0a00517 	ldw	r2,-32748(gp)
100002fc:	103ee83a 	callr	r2
10000300:	00000106 	br	10000308 <alt_get_errno+0x28>
10000304:	d0a18604 	addi	r2,gp,-31208
10000308:	e037883a 	mov	sp,fp
1000030c:	dfc00117 	ldw	ra,4(sp)
10000310:	df000017 	ldw	fp,0(sp)
10000314:	dec00204 	addi	sp,sp,8
10000318:	f800283a 	ret

1000031c <close>:
1000031c:	defffb04 	addi	sp,sp,-20
10000320:	dfc00415 	stw	ra,16(sp)
10000324:	df000315 	stw	fp,12(sp)
10000328:	df000304 	addi	fp,sp,12
1000032c:	e13fff15 	stw	r4,-4(fp)
10000330:	e0bfff17 	ldw	r2,-4(fp)
10000334:	10000816 	blt	r2,zero,10000358 <close+0x3c>
10000338:	01400304 	movi	r5,12
1000033c:	e13fff17 	ldw	r4,-4(fp)
10000340:	00008ac0 	call	100008ac <__mulsi3>
10000344:	1007883a 	mov	r3,r2
10000348:	00840034 	movhi	r2,4096
1000034c:	10825004 	addi	r2,r2,2368
10000350:	1885883a 	add	r2,r3,r2
10000354:	00000106 	br	1000035c <close+0x40>
10000358:	0005883a 	mov	r2,zero
1000035c:	e0bffd15 	stw	r2,-12(fp)
10000360:	e0bffd17 	ldw	r2,-12(fp)
10000364:	10001926 	beq	r2,zero,100003cc <close+0xb0>
10000368:	e0bffd17 	ldw	r2,-12(fp)
1000036c:	10800017 	ldw	r2,0(r2)
10000370:	10800417 	ldw	r2,16(r2)
10000374:	10000626 	beq	r2,zero,10000390 <close+0x74>
10000378:	e0bffd17 	ldw	r2,-12(fp)
1000037c:	10800017 	ldw	r2,0(r2)
10000380:	10800417 	ldw	r2,16(r2)
10000384:	e13ffd17 	ldw	r4,-12(fp)
10000388:	103ee83a 	callr	r2
1000038c:	00000106 	br	10000394 <close+0x78>
10000390:	0005883a 	mov	r2,zero
10000394:	e0bffe15 	stw	r2,-8(fp)
10000398:	e13fff17 	ldw	r4,-4(fp)
1000039c:	00005200 	call	10000520 <alt_release_fd>
100003a0:	e0bffe17 	ldw	r2,-8(fp)
100003a4:	1000070e 	bge	r2,zero,100003c4 <close+0xa8>
100003a8:	00002e00 	call	100002e0 <alt_get_errno>
100003ac:	1007883a 	mov	r3,r2
100003b0:	e0bffe17 	ldw	r2,-8(fp)
100003b4:	0085c83a 	sub	r2,zero,r2
100003b8:	18800015 	stw	r2,0(r3)
100003bc:	00bfffc4 	movi	r2,-1
100003c0:	00000706 	br	100003e0 <close+0xc4>
100003c4:	0005883a 	mov	r2,zero
100003c8:	00000506 	br	100003e0 <close+0xc4>
100003cc:	00002e00 	call	100002e0 <alt_get_errno>
100003d0:	1007883a 	mov	r3,r2
100003d4:	00801444 	movi	r2,81
100003d8:	18800015 	stw	r2,0(r3)
100003dc:	00bfffc4 	movi	r2,-1
100003e0:	e037883a 	mov	sp,fp
100003e4:	dfc00117 	ldw	ra,4(sp)
100003e8:	df000017 	ldw	fp,0(sp)
100003ec:	dec00204 	addi	sp,sp,8
100003f0:	f800283a 	ret

100003f4 <alt_dcache_flush_all>:
100003f4:	deffff04 	addi	sp,sp,-4
100003f8:	df000015 	stw	fp,0(sp)
100003fc:	d839883a 	mov	fp,sp
10000400:	0001883a 	nop
10000404:	e037883a 	mov	sp,fp
10000408:	df000017 	ldw	fp,0(sp)
1000040c:	dec00104 	addi	sp,sp,4
10000410:	f800283a 	ret

10000414 <alt_dev_null_write>:
10000414:	defffc04 	addi	sp,sp,-16
10000418:	df000315 	stw	fp,12(sp)
1000041c:	df000304 	addi	fp,sp,12
10000420:	e13ffd15 	stw	r4,-12(fp)
10000424:	e17ffe15 	stw	r5,-8(fp)
10000428:	e1bfff15 	stw	r6,-4(fp)
1000042c:	e0bfff17 	ldw	r2,-4(fp)
10000430:	e037883a 	mov	sp,fp
10000434:	df000017 	ldw	fp,0(sp)
10000438:	dec00104 	addi	sp,sp,4
1000043c:	f800283a 	ret

10000440 <_do_ctors>:
10000440:	defffd04 	addi	sp,sp,-12
10000444:	dfc00215 	stw	ra,8(sp)
10000448:	df000115 	stw	fp,4(sp)
1000044c:	df000104 	addi	fp,sp,4
10000450:	00840034 	movhi	r2,4096
10000454:	10824104 	addi	r2,r2,2308
10000458:	e0bfff15 	stw	r2,-4(fp)
1000045c:	00000606 	br	10000478 <_do_ctors+0x38>
10000460:	e0bfff17 	ldw	r2,-4(fp)
10000464:	10800017 	ldw	r2,0(r2)
10000468:	103ee83a 	callr	r2
1000046c:	e0bfff17 	ldw	r2,-4(fp)
10000470:	10bfff04 	addi	r2,r2,-4
10000474:	e0bfff15 	stw	r2,-4(fp)
10000478:	e0ffff17 	ldw	r3,-4(fp)
1000047c:	00840034 	movhi	r2,4096
10000480:	10824204 	addi	r2,r2,2312
10000484:	18bff62e 	bgeu	r3,r2,10000460 <__alt_data_end+0xf8000460>
10000488:	0001883a 	nop
1000048c:	e037883a 	mov	sp,fp
10000490:	dfc00117 	ldw	ra,4(sp)
10000494:	df000017 	ldw	fp,0(sp)
10000498:	dec00204 	addi	sp,sp,8
1000049c:	f800283a 	ret

100004a0 <_do_dtors>:
100004a0:	defffd04 	addi	sp,sp,-12
100004a4:	dfc00215 	stw	ra,8(sp)
100004a8:	df000115 	stw	fp,4(sp)
100004ac:	df000104 	addi	fp,sp,4
100004b0:	00840034 	movhi	r2,4096
100004b4:	10824104 	addi	r2,r2,2308
100004b8:	e0bfff15 	stw	r2,-4(fp)
100004bc:	00000606 	br	100004d8 <_do_dtors+0x38>
100004c0:	e0bfff17 	ldw	r2,-4(fp)
100004c4:	10800017 	ldw	r2,0(r2)
100004c8:	103ee83a 	callr	r2
100004cc:	e0bfff17 	ldw	r2,-4(fp)
100004d0:	10bfff04 	addi	r2,r2,-4
100004d4:	e0bfff15 	stw	r2,-4(fp)
100004d8:	e0ffff17 	ldw	r3,-4(fp)
100004dc:	00840034 	movhi	r2,4096
100004e0:	10824204 	addi	r2,r2,2312
100004e4:	18bff62e 	bgeu	r3,r2,100004c0 <__alt_data_end+0xf80004c0>
100004e8:	0001883a 	nop
100004ec:	e037883a 	mov	sp,fp
100004f0:	dfc00117 	ldw	ra,4(sp)
100004f4:	df000017 	ldw	fp,0(sp)
100004f8:	dec00204 	addi	sp,sp,8
100004fc:	f800283a 	ret

10000500 <alt_icache_flush_all>:
10000500:	deffff04 	addi	sp,sp,-4
10000504:	df000015 	stw	fp,0(sp)
10000508:	d839883a 	mov	fp,sp
1000050c:	0001883a 	nop
10000510:	e037883a 	mov	sp,fp
10000514:	df000017 	ldw	fp,0(sp)
10000518:	dec00104 	addi	sp,sp,4
1000051c:	f800283a 	ret

10000520 <alt_release_fd>:
10000520:	defffc04 	addi	sp,sp,-16
10000524:	dfc00315 	stw	ra,12(sp)
10000528:	df000215 	stw	fp,8(sp)
1000052c:	dc000115 	stw	r16,4(sp)
10000530:	df000204 	addi	fp,sp,8
10000534:	e13ffe15 	stw	r4,-8(fp)
10000538:	e0bffe17 	ldw	r2,-8(fp)
1000053c:	108000d0 	cmplti	r2,r2,3
10000540:	1000111e 	bne	r2,zero,10000588 <alt_release_fd+0x68>
10000544:	04040034 	movhi	r16,4096
10000548:	84025004 	addi	r16,r16,2368
1000054c:	e0bffe17 	ldw	r2,-8(fp)
10000550:	01400304 	movi	r5,12
10000554:	1009883a 	mov	r4,r2
10000558:	00008ac0 	call	100008ac <__mulsi3>
1000055c:	8085883a 	add	r2,r16,r2
10000560:	10800204 	addi	r2,r2,8
10000564:	10000015 	stw	zero,0(r2)
10000568:	04040034 	movhi	r16,4096
1000056c:	84025004 	addi	r16,r16,2368
10000570:	e0bffe17 	ldw	r2,-8(fp)
10000574:	01400304 	movi	r5,12
10000578:	1009883a 	mov	r4,r2
1000057c:	00008ac0 	call	100008ac <__mulsi3>
10000580:	8085883a 	add	r2,r16,r2
10000584:	10000015 	stw	zero,0(r2)
10000588:	0001883a 	nop
1000058c:	e6ffff04 	addi	sp,fp,-4
10000590:	dfc00217 	ldw	ra,8(sp)
10000594:	df000117 	ldw	fp,4(sp)
10000598:	dc000017 	ldw	r16,0(sp)
1000059c:	dec00304 	addi	sp,sp,12
100005a0:	f800283a 	ret

100005a4 <altera_nios2_gen2_irq_init>:
100005a4:	deffff04 	addi	sp,sp,-4
100005a8:	df000015 	stw	fp,0(sp)
100005ac:	d839883a 	mov	fp,sp
100005b0:	000170fa 	wrctl	ienable,zero
100005b4:	0001883a 	nop
100005b8:	e037883a 	mov	sp,fp
100005bc:	df000017 	ldw	fp,0(sp)
100005c0:	dec00104 	addi	sp,sp,4
100005c4:	f800283a 	ret

100005c8 <atexit>:
100005c8:	200b883a 	mov	r5,r4
100005cc:	000f883a 	mov	r7,zero
100005d0:	000d883a 	mov	r6,zero
100005d4:	0009883a 	mov	r4,zero
100005d8:	00006141 	jmpi	10000614 <__register_exitproc>

100005dc <exit>:
100005dc:	defffe04 	addi	sp,sp,-8
100005e0:	000b883a 	mov	r5,zero
100005e4:	dc000015 	stw	r16,0(sp)
100005e8:	dfc00115 	stw	ra,4(sp)
100005ec:	2021883a 	mov	r16,r4
100005f0:	000072c0 	call	1000072c <__call_exitprocs>
100005f4:	00840034 	movhi	r2,4096
100005f8:	1083bf04 	addi	r2,r2,3836
100005fc:	11000017 	ldw	r4,0(r2)
10000600:	20800f17 	ldw	r2,60(r4)
10000604:	10000126 	beq	r2,zero,1000060c <exit+0x30>
10000608:	103ee83a 	callr	r2
1000060c:	8009883a 	mov	r4,r16
10000610:	00008d40 	call	100008d4 <_exit>

10000614 <__register_exitproc>:
10000614:	defffa04 	addi	sp,sp,-24
10000618:	dc000315 	stw	r16,12(sp)
1000061c:	04040034 	movhi	r16,4096
10000620:	8403bf04 	addi	r16,r16,3836
10000624:	80c00017 	ldw	r3,0(r16)
10000628:	dc400415 	stw	r17,16(sp)
1000062c:	dfc00515 	stw	ra,20(sp)
10000630:	18805217 	ldw	r2,328(r3)
10000634:	2023883a 	mov	r17,r4
10000638:	10003726 	beq	r2,zero,10000718 <__register_exitproc+0x104>
1000063c:	10c00117 	ldw	r3,4(r2)
10000640:	010007c4 	movi	r4,31
10000644:	20c00e16 	blt	r4,r3,10000680 <__register_exitproc+0x6c>
10000648:	1a000044 	addi	r8,r3,1
1000064c:	8800221e 	bne	r17,zero,100006d8 <__register_exitproc+0xc4>
10000650:	18c00084 	addi	r3,r3,2
10000654:	18c7883a 	add	r3,r3,r3
10000658:	18c7883a 	add	r3,r3,r3
1000065c:	12000115 	stw	r8,4(r2)
10000660:	10c7883a 	add	r3,r2,r3
10000664:	19400015 	stw	r5,0(r3)
10000668:	0005883a 	mov	r2,zero
1000066c:	dfc00517 	ldw	ra,20(sp)
10000670:	dc400417 	ldw	r17,16(sp)
10000674:	dc000317 	ldw	r16,12(sp)
10000678:	dec00604 	addi	sp,sp,24
1000067c:	f800283a 	ret
10000680:	00800034 	movhi	r2,0
10000684:	10800004 	addi	r2,r2,0
10000688:	10002626 	beq	r2,zero,10000724 <__register_exitproc+0x110>
1000068c:	01006404 	movi	r4,400
10000690:	d9400015 	stw	r5,0(sp)
10000694:	d9800115 	stw	r6,4(sp)
10000698:	d9c00215 	stw	r7,8(sp)
1000069c:	00000000 	call	10000000 <__reset>
100006a0:	d9400017 	ldw	r5,0(sp)
100006a4:	d9800117 	ldw	r6,4(sp)
100006a8:	d9c00217 	ldw	r7,8(sp)
100006ac:	10001d26 	beq	r2,zero,10000724 <__register_exitproc+0x110>
100006b0:	81000017 	ldw	r4,0(r16)
100006b4:	10000115 	stw	zero,4(r2)
100006b8:	02000044 	movi	r8,1
100006bc:	22405217 	ldw	r9,328(r4)
100006c0:	0007883a 	mov	r3,zero
100006c4:	12400015 	stw	r9,0(r2)
100006c8:	20805215 	stw	r2,328(r4)
100006cc:	10006215 	stw	zero,392(r2)
100006d0:	10006315 	stw	zero,396(r2)
100006d4:	883fde26 	beq	r17,zero,10000650 <__alt_data_end+0xf8000650>
100006d8:	18c9883a 	add	r4,r3,r3
100006dc:	2109883a 	add	r4,r4,r4
100006e0:	1109883a 	add	r4,r2,r4
100006e4:	21802215 	stw	r6,136(r4)
100006e8:	01800044 	movi	r6,1
100006ec:	12406217 	ldw	r9,392(r2)
100006f0:	30cc983a 	sll	r6,r6,r3
100006f4:	4992b03a 	or	r9,r9,r6
100006f8:	12406215 	stw	r9,392(r2)
100006fc:	21c04215 	stw	r7,264(r4)
10000700:	01000084 	movi	r4,2
10000704:	893fd21e 	bne	r17,r4,10000650 <__alt_data_end+0xf8000650>
10000708:	11006317 	ldw	r4,396(r2)
1000070c:	218cb03a 	or	r6,r4,r6
10000710:	11806315 	stw	r6,396(r2)
10000714:	003fce06 	br	10000650 <__alt_data_end+0xf8000650>
10000718:	18805304 	addi	r2,r3,332
1000071c:	18805215 	stw	r2,328(r3)
10000720:	003fc606 	br	1000063c <__alt_data_end+0xf800063c>
10000724:	00bfffc4 	movi	r2,-1
10000728:	003fd006 	br	1000066c <__alt_data_end+0xf800066c>

1000072c <__call_exitprocs>:
1000072c:	defff504 	addi	sp,sp,-44
10000730:	df000915 	stw	fp,36(sp)
10000734:	dd400615 	stw	r21,24(sp)
10000738:	dc800315 	stw	r18,12(sp)
1000073c:	dfc00a15 	stw	ra,40(sp)
10000740:	ddc00815 	stw	r23,32(sp)
10000744:	dd800715 	stw	r22,28(sp)
10000748:	dd000515 	stw	r20,20(sp)
1000074c:	dcc00415 	stw	r19,16(sp)
10000750:	dc400215 	stw	r17,8(sp)
10000754:	dc000115 	stw	r16,4(sp)
10000758:	d9000015 	stw	r4,0(sp)
1000075c:	2839883a 	mov	fp,r5
10000760:	04800044 	movi	r18,1
10000764:	057fffc4 	movi	r21,-1
10000768:	00840034 	movhi	r2,4096
1000076c:	1083bf04 	addi	r2,r2,3836
10000770:	12000017 	ldw	r8,0(r2)
10000774:	45005217 	ldw	r20,328(r8)
10000778:	44c05204 	addi	r19,r8,328
1000077c:	a0001c26 	beq	r20,zero,100007f0 <__call_exitprocs+0xc4>
10000780:	a0800117 	ldw	r2,4(r20)
10000784:	15ffffc4 	addi	r23,r2,-1
10000788:	b8000d16 	blt	r23,zero,100007c0 <__call_exitprocs+0x94>
1000078c:	14000044 	addi	r16,r2,1
10000790:	8421883a 	add	r16,r16,r16
10000794:	8421883a 	add	r16,r16,r16
10000798:	84402004 	addi	r17,r16,128
1000079c:	a463883a 	add	r17,r20,r17
100007a0:	a421883a 	add	r16,r20,r16
100007a4:	e0001e26 	beq	fp,zero,10000820 <__call_exitprocs+0xf4>
100007a8:	80804017 	ldw	r2,256(r16)
100007ac:	e0801c26 	beq	fp,r2,10000820 <__call_exitprocs+0xf4>
100007b0:	bdffffc4 	addi	r23,r23,-1
100007b4:	843fff04 	addi	r16,r16,-4
100007b8:	8c7fff04 	addi	r17,r17,-4
100007bc:	bd7ff91e 	bne	r23,r21,100007a4 <__alt_data_end+0xf80007a4>
100007c0:	00800034 	movhi	r2,0
100007c4:	10800004 	addi	r2,r2,0
100007c8:	10000926 	beq	r2,zero,100007f0 <__call_exitprocs+0xc4>
100007cc:	a0800117 	ldw	r2,4(r20)
100007d0:	1000301e 	bne	r2,zero,10000894 <__call_exitprocs+0x168>
100007d4:	a0800017 	ldw	r2,0(r20)
100007d8:	10003226 	beq	r2,zero,100008a4 <__call_exitprocs+0x178>
100007dc:	a009883a 	mov	r4,r20
100007e0:	98800015 	stw	r2,0(r19)
100007e4:	00000000 	call	10000000 <__reset>
100007e8:	9d000017 	ldw	r20,0(r19)
100007ec:	a03fe41e 	bne	r20,zero,10000780 <__alt_data_end+0xf8000780>
100007f0:	dfc00a17 	ldw	ra,40(sp)
100007f4:	df000917 	ldw	fp,36(sp)
100007f8:	ddc00817 	ldw	r23,32(sp)
100007fc:	dd800717 	ldw	r22,28(sp)
10000800:	dd400617 	ldw	r21,24(sp)
10000804:	dd000517 	ldw	r20,20(sp)
10000808:	dcc00417 	ldw	r19,16(sp)
1000080c:	dc800317 	ldw	r18,12(sp)
10000810:	dc400217 	ldw	r17,8(sp)
10000814:	dc000117 	ldw	r16,4(sp)
10000818:	dec00b04 	addi	sp,sp,44
1000081c:	f800283a 	ret
10000820:	a0800117 	ldw	r2,4(r20)
10000824:	80c00017 	ldw	r3,0(r16)
10000828:	10bfffc4 	addi	r2,r2,-1
1000082c:	15c01426 	beq	r2,r23,10000880 <__call_exitprocs+0x154>
10000830:	80000015 	stw	zero,0(r16)
10000834:	183fde26 	beq	r3,zero,100007b0 <__alt_data_end+0xf80007b0>
10000838:	95c8983a 	sll	r4,r18,r23
1000083c:	a0806217 	ldw	r2,392(r20)
10000840:	a5800117 	ldw	r22,4(r20)
10000844:	2084703a 	and	r2,r4,r2
10000848:	10000b26 	beq	r2,zero,10000878 <__call_exitprocs+0x14c>
1000084c:	a0806317 	ldw	r2,396(r20)
10000850:	2088703a 	and	r4,r4,r2
10000854:	20000c1e 	bne	r4,zero,10000888 <__call_exitprocs+0x15c>
10000858:	89400017 	ldw	r5,0(r17)
1000085c:	d9000017 	ldw	r4,0(sp)
10000860:	183ee83a 	callr	r3
10000864:	a0800117 	ldw	r2,4(r20)
10000868:	15bfbf1e 	bne	r2,r22,10000768 <__alt_data_end+0xf8000768>
1000086c:	98800017 	ldw	r2,0(r19)
10000870:	153fcf26 	beq	r2,r20,100007b0 <__alt_data_end+0xf80007b0>
10000874:	003fbc06 	br	10000768 <__alt_data_end+0xf8000768>
10000878:	183ee83a 	callr	r3
1000087c:	003ff906 	br	10000864 <__alt_data_end+0xf8000864>
10000880:	a5c00115 	stw	r23,4(r20)
10000884:	003feb06 	br	10000834 <__alt_data_end+0xf8000834>
10000888:	89000017 	ldw	r4,0(r17)
1000088c:	183ee83a 	callr	r3
10000890:	003ff406 	br	10000864 <__alt_data_end+0xf8000864>
10000894:	a0800017 	ldw	r2,0(r20)
10000898:	a027883a 	mov	r19,r20
1000089c:	1029883a 	mov	r20,r2
100008a0:	003fb606 	br	1000077c <__alt_data_end+0xf800077c>
100008a4:	0005883a 	mov	r2,zero
100008a8:	003ffb06 	br	10000898 <__alt_data_end+0xf8000898>

100008ac <__mulsi3>:
100008ac:	0005883a 	mov	r2,zero
100008b0:	20000726 	beq	r4,zero,100008d0 <__mulsi3+0x24>
100008b4:	20c0004c 	andi	r3,r4,1
100008b8:	2008d07a 	srli	r4,r4,1
100008bc:	18000126 	beq	r3,zero,100008c4 <__mulsi3+0x18>
100008c0:	1145883a 	add	r2,r2,r5
100008c4:	294b883a 	add	r5,r5,r5
100008c8:	203ffa1e 	bne	r4,zero,100008b4 <__alt_data_end+0xf80008b4>
100008cc:	f800283a 	ret
100008d0:	f800283a 	ret

100008d4 <_exit>:
100008d4:	defffd04 	addi	sp,sp,-12
100008d8:	df000215 	stw	fp,8(sp)
100008dc:	df000204 	addi	fp,sp,8
100008e0:	e13fff15 	stw	r4,-4(fp)
100008e4:	0001883a 	nop
100008e8:	e0bfff17 	ldw	r2,-4(fp)
100008ec:	e0bffe15 	stw	r2,-8(fp)
100008f0:	e0bffe17 	ldw	r2,-8(fp)
100008f4:	10000226 	beq	r2,zero,10000900 <_exit+0x2c>
100008f8:	002af070 	cmpltui	zero,zero,43969
100008fc:	00000106 	br	10000904 <_exit+0x30>
10000900:	002af0b0 	cmpltui	zero,zero,43970
10000904:	003fff06 	br	10000904 <__alt_data_end+0xf8000904>
