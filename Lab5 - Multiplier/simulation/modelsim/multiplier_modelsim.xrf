vendor_name = ModelSim
source_file = 1, C:/Users/ctheld2/multiplier/Synchronizers.sv
source_file = 1, C:/Users/ctheld2/multiplier/control.sv
source_file = 1, C:/Users/ctheld2/multiplier/testbench.sv
source_file = 1, C:/Users/ctheld2/multiplier/shift_8.sv
source_file = 1, C:/Users/ctheld2/multiplier/nine_bit_adder.sv
source_file = 1, C:/Users/ctheld2/multiplier/multiplier.sv
source_file = 1, C:/Users/ctheld2/multiplier/HexDriver.sv
source_file = 1, C:/Users/ctheld2/multiplier/db/multiplier.cbx.xml
design_name = multiplier
instance = comp, \AHEXU[0]~output , AHEXU[0]~output, multiplier, 1
instance = comp, \AHEXU[1]~output , AHEXU[1]~output, multiplier, 1
instance = comp, \AHEXU[2]~output , AHEXU[2]~output, multiplier, 1
instance = comp, \AHEXU[3]~output , AHEXU[3]~output, multiplier, 1
instance = comp, \AHEXU[4]~output , AHEXU[4]~output, multiplier, 1
instance = comp, \AHEXU[5]~output , AHEXU[5]~output, multiplier, 1
instance = comp, \AHEXU[6]~output , AHEXU[6]~output, multiplier, 1
instance = comp, \AHEXL[0]~output , AHEXL[0]~output, multiplier, 1
instance = comp, \AHEXL[1]~output , AHEXL[1]~output, multiplier, 1
instance = comp, \AHEXL[2]~output , AHEXL[2]~output, multiplier, 1
instance = comp, \AHEXL[3]~output , AHEXL[3]~output, multiplier, 1
instance = comp, \AHEXL[4]~output , AHEXL[4]~output, multiplier, 1
instance = comp, \AHEXL[5]~output , AHEXL[5]~output, multiplier, 1
instance = comp, \AHEXL[6]~output , AHEXL[6]~output, multiplier, 1
instance = comp, \BHEXU[0]~output , BHEXU[0]~output, multiplier, 1
instance = comp, \BHEXU[1]~output , BHEXU[1]~output, multiplier, 1
instance = comp, \BHEXU[2]~output , BHEXU[2]~output, multiplier, 1
instance = comp, \BHEXU[3]~output , BHEXU[3]~output, multiplier, 1
instance = comp, \BHEXU[4]~output , BHEXU[4]~output, multiplier, 1
instance = comp, \BHEXU[5]~output , BHEXU[5]~output, multiplier, 1
instance = comp, \BHEXU[6]~output , BHEXU[6]~output, multiplier, 1
instance = comp, \BHEXL[0]~output , BHEXL[0]~output, multiplier, 1
instance = comp, \BHEXL[1]~output , BHEXL[1]~output, multiplier, 1
instance = comp, \BHEXL[2]~output , BHEXL[2]~output, multiplier, 1
instance = comp, \BHEXL[3]~output , BHEXL[3]~output, multiplier, 1
instance = comp, \BHEXL[4]~output , BHEXL[4]~output, multiplier, 1
instance = comp, \BHEXL[5]~output , BHEXL[5]~output, multiplier, 1
instance = comp, \BHEXL[6]~output , BHEXL[6]~output, multiplier, 1
instance = comp, \X~output , X~output, multiplier, 1
instance = comp, \CLK~input , CLK~input, multiplier, 1
instance = comp, \CLK~inputclkctrl , CLK~inputclkctrl, multiplier, 1
instance = comp, \RESET~input , RESET~input, multiplier, 1
instance = comp, \button_sync[2]|q~0 , button_sync[2]|q~0, multiplier, 1
instance = comp, \button_sync[2]|q , button_sync[2]|q, multiplier, 1
instance = comp, \RUN~input , RUN~input, multiplier, 1
instance = comp, \button_sync[1]|q~0 , button_sync[1]|q~0, multiplier, 1
instance = comp, \button_sync[1]|q , button_sync[1]|q, multiplier, 1
instance = comp, \CU|Selector5~0 , CU|Selector5~0, multiplier, 1
instance = comp, \CU|current_state.Hold , CU|current_state.Hold, multiplier, 1
instance = comp, \CLEARA_LOADB~input , CLEARA_LOADB~input, multiplier, 1
instance = comp, \button_sync[0]|q~0 , button_sync[0]|q~0, multiplier, 1
instance = comp, \button_sync[0]|q , button_sync[0]|q, multiplier, 1
instance = comp, \CU|current_state~17 , CU|current_state~17, multiplier, 1
instance = comp, \CU|current_state~18 , CU|current_state~18, multiplier, 1
instance = comp, \CU|current_state.Again , CU|current_state.Again, multiplier, 1
instance = comp, \CU|current_state~22 , CU|current_state~22, multiplier, 1
instance = comp, \CU|current_state.Preclear , CU|current_state.Preclear, multiplier, 1
instance = comp, \CU|current_state~15 , CU|current_state~15, multiplier, 1
instance = comp, \CU|current_state~16 , CU|current_state~16, multiplier, 1
instance = comp, \CU|current_state.Rest , CU|current_state.Rest, multiplier, 1
instance = comp, \CU|current_state~20 , CU|current_state~20, multiplier, 1
instance = comp, \CU|current_state~19 , CU|current_state~19, multiplier, 1
instance = comp, \CU|current_state~21 , CU|current_state~21, multiplier, 1
instance = comp, \CU|current_state.Clear , CU|current_state.Clear, multiplier, 1
instance = comp, \S[0]~input , S[0]~input, multiplier, 1
instance = comp, \s_sync[0]|q , s_sync[0]|q, multiplier, 1
instance = comp, \S[1]~input , S[1]~input, multiplier, 1
instance = comp, \s_sync[1]|q , s_sync[1]|q, multiplier, 1
instance = comp, \S[3]~input , S[3]~input, multiplier, 1
instance = comp, \s_sync[3]|q , s_sync[3]|q, multiplier, 1
instance = comp, \clearMUX_a[0]~0 , clearMUX_a[0]~0, multiplier, 1
instance = comp, \CU|WideOr7 , CU|WideOr7, multiplier, 1
instance = comp, \reg_A|POUT[7]~10 , reg_A|POUT[7]~10, multiplier, 1
instance = comp, \clearMUX_a[0]~1 , clearMUX_a[0]~1, multiplier, 1
instance = comp, \CU|SUB~0 , CU|SUB~0, multiplier, 1
instance = comp, \adder|csa|fa0|a0|COUT~0 , adder|csa|fa0|a0|COUT~0, multiplier, 1
instance = comp, \adder|B_16[1] , adder|B_16[1], multiplier, 1
instance = comp, \adder|csa|fa0|a0|COUT~1 , adder|csa|fa0|a0|COUT~1, multiplier, 1
instance = comp, \adder|csa|fa0|a1|S , adder|csa|fa0|a1|S, multiplier, 1
instance = comp, \reg_A|POUT[1]~1 , reg_A|POUT[1]~1, multiplier, 1
instance = comp, \reg_A|POUT[4]~8 , reg_A|POUT[4]~8, multiplier, 1
instance = comp, \CU|WideOr6 , CU|WideOr6, multiplier, 1
instance = comp, \reg_A|POUT[4]~9 , reg_A|POUT[4]~9, multiplier, 1
instance = comp, \reg_A|POUT[1] , reg_A|POUT[1], multiplier, 1
instance = comp, \adder|csa|fa0|a1|COUT~0 , adder|csa|fa0|a1|COUT~0, multiplier, 1
instance = comp, \S[2]~input , S[2]~input, multiplier, 1
instance = comp, \s_sync[2]|q , s_sync[2]|q, multiplier, 1
instance = comp, \adder|csa|fa0|a2|S , adder|csa|fa0|a2|S, multiplier, 1
instance = comp, \reg_A|POUT[2]~2 , reg_A|POUT[2]~2, multiplier, 1
instance = comp, \reg_A|POUT[2] , reg_A|POUT[2], multiplier, 1
instance = comp, \adder|csa|fa0|a2|COUT~0 , adder|csa|fa0|a2|COUT~0, multiplier, 1
instance = comp, \adder|csa|fa0|a3|S , adder|csa|fa0|a3|S, multiplier, 1
instance = comp, \reg_A|POUT[3]~3 , reg_A|POUT[3]~3, multiplier, 1
instance = comp, \S[4]~input , S[4]~input, multiplier, 1
instance = comp, \s_sync[4]|q , s_sync[4]|q, multiplier, 1
instance = comp, \adder|B_16[4] , adder|B_16[4], multiplier, 1
instance = comp, \adder|csa|cs0|S[0]~0 , adder|csa|cs0|S[0]~0, multiplier, 1
instance = comp, \reg_A|POUT[4]~0 , reg_A|POUT[4]~0, multiplier, 1
instance = comp, \reg_A|POUT[4] , reg_A|POUT[4], multiplier, 1
instance = comp, \reg_A|POUT[3] , reg_A|POUT[3], multiplier, 1
instance = comp, \adder|csa|fa0|a3|COUT~0 , adder|csa|fa0|a3|COUT~0, multiplier, 1
instance = comp, \S[6]~input , S[6]~input, multiplier, 1
instance = comp, \s_sync[6]|q , s_sync[6]|q, multiplier, 1
instance = comp, \reg_A|POUT~22 , reg_A|POUT~22, multiplier, 1
instance = comp, \S[5]~input , S[5]~input, multiplier, 1
instance = comp, \s_sync[5]|q , s_sync[5]|q, multiplier, 1
instance = comp, \adder|B_16[5] , adder|B_16[5], multiplier, 1
instance = comp, \adder|csa|cs0|fa0|a1|COUT~0 , adder|csa|cs0|fa0|a1|COUT~0, multiplier, 1
instance = comp, \reg_A|POUT~16 , reg_A|POUT~16, multiplier, 1
instance = comp, \adder|csa|cs0|fa1|a1|COUT~0 , adder|csa|cs0|fa1|a1|COUT~0, multiplier, 1
instance = comp, \reg_A|POUT~15 , reg_A|POUT~15, multiplier, 1
instance = comp, \reg_A|POUT[7]~11 , reg_A|POUT[7]~11, multiplier, 1
instance = comp, \reg_A|POUT~17 , reg_A|POUT~17, multiplier, 1
instance = comp, \reg_A|POUT[6] , reg_A|POUT[6], multiplier, 1
instance = comp, \adder|csa|cs0|fa1|a2|COUT~0 , adder|csa|cs0|fa1|a2|COUT~0, multiplier, 1
instance = comp, \adder|csa|cs0|fa0|a2|COUT~0 , adder|csa|cs0|fa0|a2|COUT~0, multiplier, 1
instance = comp, \reg_A|POUT~18 , reg_A|POUT~18, multiplier, 1
instance = comp, \reg_A|POUT~19 , reg_A|POUT~19, multiplier, 1
instance = comp, \reg_A|POUT~20 , reg_A|POUT~20, multiplier, 1
instance = comp, \reg_A|POUT[7] , reg_A|POUT[7], multiplier, 1
instance = comp, \S[7]~input , S[7]~input, multiplier, 1
instance = comp, \s_sync[7]|q , s_sync[7]|q, multiplier, 1
instance = comp, \adder|csa|cs1|S[0]~0 , adder|csa|cs1|S[0]~0, multiplier, 1
instance = comp, \adder|csa|cs0|fa1|a3|COUT~0 , adder|csa|cs0|fa1|a3|COUT~0, multiplier, 1
instance = comp, \adder|csa|cs0|fa0|a3|COUT~0 , adder|csa|cs0|fa0|a3|COUT~0, multiplier, 1
instance = comp, \adder|csa|cs1|S[0]~1 , adder|csa|cs1|S[0]~1, multiplier, 1
instance = comp, \X_next~0 , X_next~0, multiplier, 1
instance = comp, \X~reg0 , X~reg0, multiplier, 1
instance = comp, \reg_A|Mux7~0 , reg_A|Mux7~0, multiplier, 1
instance = comp, \reg_A|Mux7~1 , reg_A|Mux7~1, multiplier, 1
instance = comp, \reg_A|POUT[0] , reg_A|POUT[0], multiplier, 1
instance = comp, \reg_A|Mux8~0 , reg_A|Mux8~0, multiplier, 1
instance = comp, \reg_A|Mux8~1 , reg_A|Mux8~1, multiplier, 1
instance = comp, \reg_A|OUT , reg_A|OUT, multiplier, 1
instance = comp, \reg_B|POUT~4 , reg_B|POUT~4, multiplier, 1
instance = comp, \reg_B|POUT[7]~1 , reg_B|POUT[7]~1, multiplier, 1
instance = comp, \reg_B|POUT[7] , reg_B|POUT[7], multiplier, 1
instance = comp, \reg_B|POUT~3 , reg_B|POUT~3, multiplier, 1
instance = comp, \reg_B|POUT[6] , reg_B|POUT[6], multiplier, 1
instance = comp, \reg_B|POUT~2 , reg_B|POUT~2, multiplier, 1
instance = comp, \reg_B|POUT[5] , reg_B|POUT[5], multiplier, 1
instance = comp, \reg_B|POUT~0 , reg_B|POUT~0, multiplier, 1
instance = comp, \reg_B|POUT[4] , reg_B|POUT[4], multiplier, 1
instance = comp, \reg_B|POUT~8 , reg_B|POUT~8, multiplier, 1
instance = comp, \reg_B|POUT[3] , reg_B|POUT[3], multiplier, 1
instance = comp, \reg_B|POUT~7 , reg_B|POUT~7, multiplier, 1
instance = comp, \reg_B|POUT[2] , reg_B|POUT[2], multiplier, 1
instance = comp, \reg_B|POUT~6 , reg_B|POUT~6, multiplier, 1
instance = comp, \reg_B|POUT[1] , reg_B|POUT[1], multiplier, 1
instance = comp, \reg_B|POUT~5 , reg_B|POUT~5, multiplier, 1
instance = comp, \reg_B|POUT[0] , reg_B|POUT[0], multiplier, 1
instance = comp, \CU|current_state~14 , CU|current_state~14, multiplier, 1
instance = comp, \CU|current_state.Add , CU|current_state.Add, multiplier, 1
instance = comp, \CU|Selector2~0 , CU|Selector2~0, multiplier, 1
instance = comp, \CU|current_state.Shift , CU|current_state.Shift, multiplier, 1
instance = comp, \CU|Selector3~0 , CU|Selector3~0, multiplier, 1
instance = comp, \CU|current_state.Check , CU|current_state.Check, multiplier, 1
instance = comp, \CU|Selector11~0 , CU|Selector11~0, multiplier, 1
instance = comp, \CU|counter[3]~0 , CU|counter[3]~0, multiplier, 1
instance = comp, \CU|counter[0] , CU|counter[0], multiplier, 1
instance = comp, \CU|Selector10~0 , CU|Selector10~0, multiplier, 1
instance = comp, \CU|counter[1] , CU|counter[1], multiplier, 1
instance = comp, \CU|Selector9~0 , CU|Selector9~0, multiplier, 1
instance = comp, \CU|counter[2] , CU|counter[2], multiplier, 1
instance = comp, \CU|Add0~0 , CU|Add0~0, multiplier, 1
instance = comp, \CU|Selector8~0 , CU|Selector8~0, multiplier, 1
instance = comp, \CU|counter[3] , CU|counter[3], multiplier, 1
instance = comp, \CU|Equal0~0 , CU|Equal0~0, multiplier, 1
instance = comp, \reg_A|POUT~21 , reg_A|POUT~21, multiplier, 1
instance = comp, \reg_A|POUT~12 , reg_A|POUT~12, multiplier, 1
instance = comp, \reg_A|POUT~13 , reg_A|POUT~13, multiplier, 1
instance = comp, \reg_A|POUT~14 , reg_A|POUT~14, multiplier, 1
instance = comp, \reg_A|POUT[5] , reg_A|POUT[5], multiplier, 1
instance = comp, \AhexU|WideOr6~0 , AhexU|WideOr6~0, multiplier, 1
instance = comp, \AhexU|WideOr5~0 , AhexU|WideOr5~0, multiplier, 1
instance = comp, \AhexU|WideOr4~0 , AhexU|WideOr4~0, multiplier, 1
instance = comp, \AhexU|WideOr3~0 , AhexU|WideOr3~0, multiplier, 1
instance = comp, \AhexU|WideOr2~0 , AhexU|WideOr2~0, multiplier, 1
instance = comp, \AhexU|WideOr1~0 , AhexU|WideOr1~0, multiplier, 1
instance = comp, \AhexU|WideOr0~0 , AhexU|WideOr0~0, multiplier, 1
instance = comp, \AhexL|WideOr6~0 , AhexL|WideOr6~0, multiplier, 1
instance = comp, \AhexL|WideOr5~0 , AhexL|WideOr5~0, multiplier, 1
instance = comp, \AhexL|WideOr4~0 , AhexL|WideOr4~0, multiplier, 1
instance = comp, \AhexL|WideOr3~0 , AhexL|WideOr3~0, multiplier, 1
instance = comp, \AhexL|WideOr2~0 , AhexL|WideOr2~0, multiplier, 1
instance = comp, \AhexL|WideOr1~0 , AhexL|WideOr1~0, multiplier, 1
instance = comp, \AhexL|WideOr0~0 , AhexL|WideOr0~0, multiplier, 1
instance = comp, \BhexU|WideOr6~0 , BhexU|WideOr6~0, multiplier, 1
instance = comp, \BhexU|WideOr5~0 , BhexU|WideOr5~0, multiplier, 1
instance = comp, \BhexU|WideOr4~0 , BhexU|WideOr4~0, multiplier, 1
instance = comp, \BhexU|WideOr3~0 , BhexU|WideOr3~0, multiplier, 1
instance = comp, \BhexU|WideOr2~0 , BhexU|WideOr2~0, multiplier, 1
instance = comp, \BhexU|WideOr1~0 , BhexU|WideOr1~0, multiplier, 1
instance = comp, \BhexU|WideOr0~0 , BhexU|WideOr0~0, multiplier, 1
instance = comp, \BhexL|WideOr6~0 , BhexL|WideOr6~0, multiplier, 1
instance = comp, \BhexL|WideOr5~0 , BhexL|WideOr5~0, multiplier, 1
instance = comp, \BhexL|WideOr4~0 , BhexL|WideOr4~0, multiplier, 1
instance = comp, \BhexL|WideOr3~0 , BhexL|WideOr3~0, multiplier, 1
instance = comp, \BhexL|WideOr2~0 , BhexL|WideOr2~0, multiplier, 1
instance = comp, \BhexL|WideOr1~0 , BhexL|WideOr1~0, multiplier, 1
instance = comp, \BhexL|WideOr0~0 , BhexL|WideOr0~0, multiplier, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
